
git init ====iniciar git
git config --global user.name "Tu nombre aquí"=config git usuario
git config --global user.email ejemplo@example.com
git status ===ver stado
git add .   ===guardar archivos all
git add NOMBREDELARCHIVO === x archivo
git rm . ====Si queremos eliminar los archivos que acabamos de añadir para ser guardados lo podemos hacer con
git commit -m "Nombre"===Con estos comandos hemos añadido o hemos quitado archivos pero aún no han sido guardados
git log  ==Para imprimir todos los commits que hemos realizado 
git reset --hard IDENTIFICADOR ===a cadena de números y letras que aparece al lado de la palabra “commit” es el identificador que podemos usar para revertir los cambios y volver atrás a ese punto
git diff ==si quires ver los cambios que has realizado desde el último commit
Para posicionarnos en una rama escribe:
git checkout nombre_de_la_rama
git brach==ver las ramas
git branch -d rama == eliminar rama despues de fusionar



# Información detallada de los cambios
---git blame <archivo>



Administrando proyectos git

Si queremos bajarnos el proyecto para empezar a gestionarlo lo podemos hacer usando:
---git clone git://servidor/ruta/a/los/archivos 

Por ejemplo, para GitHub:
---git clone https://github.com/proyectogithub

Pero, si tenemos cambios sin guardar, tenemos que guardarlos haciendo commit, antes de bajarnos nada.
Tras hacer commit de cambios nuevos, podemos subirlos al repositorio remoto:
---git push origin master


Para añadir la dirección de un repositorio remoto a origin, lo podemos hacer así:
---git remote add origin https://github.com/user/repo.git

Eliminar remote origin
--git remote remove origin

eliminar session git
---rm -f .git/index.lock

Ramas en git

---git push origin master

Para posicionarnos en una rama escribe:
---git checkout nombre_de_la_rama

crear una rama:
---git checkout -b rama_nueva


deshacer modificacion 
--- git checkout nombre_del_archivo


Para combinar ramas, es decir, git va a tratar de hacer una fusión de los cambios de ambas ramas,
si llega a una línea que se ha cambiado en los dos sitios a la vez al no saber que cambio es el que el usuario quiere saltará un conflicto de git. Para arreglarlo tienes que decidir que cambio quieres conservar y volver a pushear para hacer el merge:
---git merge hotfix

rama en la que nos encontremos. 
---git brach



escribir git remote -v para ver qué / dónde se configuran los controles remotos. Si cometió un error antes, puede escribir git remote rm originpara borrarlo e intentarlo de nuevo.

---forsar pull--
git reset --hard
git pull

---cofig--
$ git credential-manager uninstall

$ git credential-manager install


-------limpiar cache gitignore---
git rm -r --cached .
